// <auto-generated />
using System;
using BravoRepository.EntityContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BravoRepository.Migrations
{
    [DbContext(typeof(BravoDbContext))]
    partial class BravoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BravoRepository.EntityModel.Cashiers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cashiers");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Check", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CashierId")
                        .HasColumnType("int");

                    b.Property<int>("CashierInfoId")
                        .HasColumnType("int");

                    b.Property<string>("ProductInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashierInfoId");

                    b.ToTable("Check");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.DateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("EDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("DateInfo");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isCountable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CashiersId")
                        .HasColumnType("int");

                    b.Property<float>("Count")
                        .HasColumnType("real");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("VAT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashiersId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Check", b =>
                {
                    b.HasOne("BravoRepository.EntityModel.Cashiers", "CashierInfo")
                        .WithMany("Checks")
                        .HasForeignKey("CashierInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashierInfo");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.DateInfo", b =>
                {
                    b.HasOne("BravoRepository.EntityModel.Stock", "Stock")
                        .WithMany("DateInfos")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Stock", b =>
                {
                    b.HasOne("BravoRepository.EntityModel.Cashiers", null)
                        .WithMany("Stocks")
                        .HasForeignKey("CashiersId");

                    b.HasOne("BravoRepository.EntityModel.Products", "Products")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Cashiers", b =>
                {
                    b.Navigation("Checks");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Products", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("BravoRepository.EntityModel.Stock", b =>
                {
                    b.Navigation("DateInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
